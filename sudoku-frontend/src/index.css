@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f9fafb;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Sudoku Cell Styles */
.sudoku-cell {
  width: 2rem;
  height: 2rem;
  border: 1px solid #9ca3af;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.125rem;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.15s;
}

.sudoku-cell-filled {
  background-color: #f3f4f6;
  color: #374151;
  cursor: not-allowed;
}

.sudoku-cell-empty {
  background-color: white;
}

.sudoku-cell-empty:hover {
  background-color: #eff6ff;
}

.sudoku-cell-selected {
  background-color: #dbeafe;
  box-shadow: 0 0 0 2px rgba(96, 165, 250, 0.5);
}

.sudoku-cell-highlighted {
  background-color: #dbeafe;
}

.sudoku-cell-invalid {
  background-color: #fee2e2;
  color: #dc2626;
}

/* Responsive */
@media (min-width: 640px) {
  .sm\\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\\:rounded-lg { border-radius: 8px; }
  .sm\\:mx-auto { margin-left: auto; margin-right: auto; }
  .sm\\:w-full { width: 100%; }
  .sm\\:max-w-md { max-width: 28rem; }
  .sm\\:flex-row { flex-direction: row; }
}

@media (min-width: 768px) {
  .md\\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .md\\:w-10 { width: 2.5rem; }
  .md\\:h-10 { height: 2.5rem; }
  .sudoku-cell {
    width: 2.5rem;
    height: 2.5rem;
  }
}

@media (min-width: 1024px) {
  .lg\\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .lg\\:flex-row { flex-direction: row; }
  .lg\\:w-80 { width: 20rem; }
}

/* Animation */
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
